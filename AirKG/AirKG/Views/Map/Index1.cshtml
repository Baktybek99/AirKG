@using AirKG.ViewModels.Markers;
@model MapModel

<div style="position: relative;">
    @foreach (var index in Model.Sensors)
    {
        <button data-bs-toggle="modal" data-bs-target="#staticBackdrop" data-action=@index.Id class="map-marker" href="#" style="position: absolute; z-index:100; left: @HTMLstatic.GetCore(index.Latitude)px; top: @HTMLstatic.GetCore(index.Longitude)px;">
            <span class="tooltiptext">Чистота @index.AirQuality , @index.PlaceName</span>
        </button>
    }
    <div class="image-container">
        <img src="~/Files/Untitled.png" alt="Первое изображение" class="bottom-image">
        <svg class="b-map-svg" version="1.0" xmlns="http://www.w3.org/2000/svg"
             width="350mm" height="350mm" viewBox="0 0 300.000000 1000.000000"
             preserveAspectRatio="xMidYMid meet">

            <g class="area1" stroke="red" stroke-width="20"
               transform="translate(88,527.000000) scale(0.078000,-0.0780000)"
               fill="#000000">

                <path d="M2410 4396 c0 -7 7 -31 16 -52 14 -34 16 -66 10 -234 -8 -236 -15
                            -315 -30 -336 -12 -15 -202 -44 -489 -75 -65 -7 -124 -17 -132 -23 -10 -8 -19
                            -82 -35 -276 -13 -146 -23 -266 -24 -267 -1 -1 -51 -5 -111 -9 -88 -5 -114
                            -10 -128 -25 -17 -18 -40 -19 -395 -19 l-377 0 -219 -40 c-120 -21 -220 -41
                            -222 -43 -3 -3 10 -225 29 -478 3 -37 10 -53 35 -75 31 -29 31 -30 39 -159 l8
                            -130 25 2 c14 1 187 7 385 13 l360 11 325 59 c179 32 359 64 400 70 42 7 84
                            20 95 30 39 34 136 90 156 90 11 0 70 -11 131 -25 61 -14 116 -25 122 -25 7 0
                            17 33 24 77 6 42 13 77 14 78 2 2 81 4 177 6 l175 4 -2 -165 c-1 -91 -7 -474
                            -14 -851 -6 -377 -9 -693 -6 -701 5 -13 56 -16 335 -22 180 -4 337 -9 349 -12
                            20 -5 21 -1 27 168 4 95 7 254 7 353 0 99 7 340 15 535 8 195 17 432 21 525 4
                            94 11 176 16 182 6 7 8 19 5 26 -4 11 -57 16 -244 21 -131 4 -238 8 -239 9 0
                            1 3 270 7 597 7 532 6 598 -8 619 -13 21 -15 49 -10 185 5 155 7 163 38 226
                            17 36 40 77 50 92 23 32 24 64 3 72 -9 3 -173 6 -365 6 -290 0 -349 -2 -349
                            -14z" />
            </g>
        </svg>
    </div>
</div>


<!-- Modal -->
<div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="staticBackdropLabel">Modal title</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                ...
                <div id="ChartView">
                    <canvas id="myChart"></canvas>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Understood</button>
            </div>
        </div>
    </div>
</div>


<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

@section scripts
    {
    <script type="text/javascript">
        $(document).ready(function () {
            function OnError(err) {

            }

            $('.map-marker').click(function () {

                var chartView = document.getElementById('ChartView');

                chartView.innerHTML = '&nbsp;';
                var sensorId = $(this).data('action');
                console.log(sensorId);
                $("#ChartView").append('<canvas id="myChart" style="max-height:500px;max-width:1000px"></canvas>')
                $.ajax({
                    type: "GET",
                    url: `/Chart/GetResult?sensorId=${sensorId}`,
                    data: "",
                    contentType: "application/json: charset=utf-8",
                    dataType: "json",
                    success: OnSuccesResult,
                    error: OnError
                })

                function OnSuccesResult(data) {
                    var _data = data;
                    var _chartLabels = _data[0];
                    var _chartData = _data[1];

                    new Chart("myChart", {
                        type: 'bar',
                        data: {
                            labels: _chartLabels,
                            datasets: [{
                                label: 'My Dataset',
                                data: _chartData,
                                backgroundColor: function (context) {
                                    var value = context.dataset.data[context.dataIndex];
                                    if (value <= 15) {
                                        return 'Blue';
                                    } else if (value >= 16 && value <= 35) {
                                        return 'Green';
                                    } else if (value >= 36 && value <= 75) {
                                        return 'Yellow';
                                    } else if (value >= 76 && value <= 100) {
                                        return 'Red';
                                    } else {
                                        return 'Black'
                                    }
                                }
                            }]
                        }
                    });

                    console.log("Finish All");
                }
            })

        })
    </script>
}

